---
title: My Chess Ratings
twitter_card: true
description: "My current Chessity Tactics Rating - and snazzy trend graphs"
---
<script src="https://cdnjs.cloudflare.com/ajax/libs/esprima/2.7.3/esprima.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/js-yaml/3.8.1/js-yaml.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.13.0/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.1/Chart.bundle.js"></script>

<h2>Chessity Tactics Rating</h2>
<div id="rating"></div>

<div>
	<canvas id="canvas"></canvas>
</div>

<script>
function newDateString(days) {
    return moment(days, "YYYY-MM-DD").format();
}

function createChartJsConfig(processedData, movingAverageData30, movingAverageData60) {
    return {
		type: 'line',
		data: {
			datasets: [{
				label: "Historical Chessity Tactics Rating",
				data: processedData,
				fill: false,
				borderColor: '#000000'
			},{
				label: "30 Day Moving Average",
				data: movingAverageData30,
				fill: false,
				borderColor: '#FF0000'
			},{
				label: "60 Day Moving Average",
				data: movingAverageData60,
				fill: false,
				borderColor: '#0000FF'
			}]
		},
		options: {
			responsive: true,
			legend: {
                display: false,
            },
            title:{
                display:true,
                text:"Chessity Tactics Rating"
            },
    		scales: {
    			xAxes: [{
    				type: "time",
    				display: true,
    				scaleLabel: {
    					display: true,
    					labelString: 'Date'
    				}
    			}],
    			yAxes: [{
    				display: true,
    				scaleLabel: {
    					display: true,
    					labelString: 'Rating'
    				},
                    ticks: {
                        max: 2100,
                        min: 1650
                    }
        		}]
    		}
		}
	};
}
	
function simpleMovingAverager(period) {
    var nums = [];
    return function(num) {
        nums.push(num);
        if (nums.length > period)
            nums.splice(0,1);  // remove the first element of the array
        var sum = 0;
        for (var i in nums)
            sum += nums[i];
        var n = period;
        if (nums.length < period)
            n = nums.length;
        return(sum/n);
    }
}
	
function loadYamlFromUrl() {
    $.get( "https://raw.githubusercontent.com/gerardcondon/chess/master/website/data/tactics.yaml", function( data ) {
        var doc = jsyaml.load(data);
        
        var chessityData = doc.chessity;
        var processedData = _.map(chessityData, function(chessityEntry, index, collection) {
            return {x:newDateString(chessityEntry.date), y: chessityEntry.rating}
        });
        sma30 = simpleMovingAverager(30);
        sma60 = simpleMovingAverager(60);
        var movingAverageData30 = _.map(chessityData, function(chessityEntry, index, collection) {
            return {x:newDateString(chessityEntry.date), y: sma30(chessityEntry.rating)}
        });
        var movingAverageData60 = _.map(chessityData, function(chessityEntry, index, collection) {
            return {x:newDateString(chessityEntry.date), y: sma60(chessityEntry.rating)}
        });
        
		var ctx = document.getElementById("canvas").getContext("2d");
		ctx.imageSmoothingEnabled = false;
		window.myLine = new Chart(ctx, createChartJsConfig(processedData, movingAverageData30, movingAverageData60));
		$("#rating").html("<strong>Rating:</strong>" +  _.last(chessityData).rating + "<br>");
    });
}

jQuery(document).ready(function($) {
    loadYamlFromUrl()
});

</script>
